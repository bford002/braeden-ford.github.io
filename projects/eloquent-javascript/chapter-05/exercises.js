// /////////////////////////////////////////////////////////////////////////////
// flatten /////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

const { countBy, characterScript } = require("./helpers");

function flatten(array) {
  return array.reduce((acc, curr) => {
    return acc.concat(curr);
  });
}

// /////////////////////////////////////////////////////////////////////////////
// loop ////////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function loop(value, test, update, body) {
    if (test(value)) {
      body(value);
      return loop(update(value), test, update, body);
    }
}

// /////////////////////////////////////////////////////////////////////////////
// every ///////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function every(array, test) {
  for (let i = 0; i < array.length; i++) {
    if (test(array[i]) === false) {
      return false;
    }
  }
  return true;
}

// /////////////////////////////////////////////////////////////////////////////
// dominantDirection ///////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function dominantDirection(str) {
  const arr = countBy(str, function(char) {
    const unicode = char.codePointAt(0);
    const script = characterScript(unicode);
    if (script !== null) {
      return script.direction;
    } else {
      return script;
    }
  });
  arr.sort(function(a, b) {
    return b.count - a.count;
  });
  return arr[0].name;
};

// /////////////////////////////////////////////////////////////////////////////
//  //////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

if ((typeof process !== 'undefined') &&
  (typeof process.versions.node !== 'undefined')) {
  module.exports = {
    flatten,
    loop,
    every,
    dominantDirection,
  };
};
